>>> make pytest
  ‚óè Executing pytest in enrobie..
============================= test session starts ==============================
platform linux -- Python 3.12.11, pytest-8.4.1, pluggy-1.6.0 -- /home/runner/work/enrobie/enrobie/main/.venv-package/bin/python3
cachedir: .pytest_cache
Using --randomly-seed=686004661
rootdir: /home/runner/work/enrobie/enrobie/main
configfile: pyproject.toml
plugins: mypy-1.0.1, randomly-3.16.0, respx-0.22.0, sphinx-0.6.3, xdist-3.8.0, anyio-4.9.0, clarity-1.0.1, mock-3.14.1, cov-6.2.1
created: 4/4 workers
4 workers [96 items]

scheduling tests via LoadScheduling

enrobie/plugins/autonick/test/test_plugin.py::test_AutoNickPlugin_cover 
enrobie/robie/threads/test/test_plugin.py::test_RobiePluginThread 
enrobie/robie/members/test/test_clients.py::test_RobieClients_cover 
enrobie/utils/test/test_child.py::test_InvalidChild_cover 
[gw2] [  1%] PASSED enrobie/utils/test/test_child.py::test_InvalidChild_cover 
enrobie/utils/test/test_child.py::test_InvalidChild 
[gw2] [  2%] PASSED enrobie/utils/test/test_child.py::test_InvalidChild 
enrobie/robie/members/test/test_plugins.py::test_RobiePlugins_cover 
[gw0] [  3%] PASSED enrobie/robie/threads/test/test_plugin.py::test_RobiePluginThread 
enrobie/robie/test/test_robie.py::test_Robie 
[gw3] [  4%] PASSED enrobie/robie/members/test/test_clients.py::test_RobieClients_cover 
enrobie/robie/members/test/test_clients.py::test_RobieClients 
[gw3] [  5%] PASSED enrobie/robie/members/test/test_clients.py::test_RobieClients 
enrobie/clients/discord/test/test_client.py::test_DSCClient 
[gw0] [  6%] PASSED enrobie/robie/test/test_robie.py::test_Robie 
enrobie/robie/test/test_robie.py::test_Robie_person 
[gw2] [  7%] PASSED enrobie/robie/members/test/test_plugins.py::test_RobiePlugins_cover 
enrobie/robie/members/test/test_plugins.py::test_RobiePlugins 
[gw3] [  8%] PASSED enrobie/clients/discord/test/test_client.py::test_DSCClient 
enrobie/clients/discord/test/test_client.py::test_DSCClient_command 
[gw0] [  9%] PASSED enrobie/robie/test/test_robie.py::test_Robie_person 
enrobie/robie/test/test_robie.py::test_Robie_cover 
[gw0] [ 10%] PASSED enrobie/robie/test/test_robie.py::test_Robie_cover 
enrobie/robie/test/test_robie.py::test_Robie_jinja2 
[gw2] [ 11%] PASSED enrobie/robie/members/test/test_plugins.py::test_RobiePlugins 
enrobie/plugins/autojoin/test/test_plugin.py::test_AutoJoinPlugin_cover 
[gw0] [ 12%] PASSED enrobie/robie/test/test_robie.py::test_Robie_jinja2 
enrobie/robie/test/test_robie.py::test_Robie_printer 
[gw3] [ 13%] PASSED enrobie/clients/discord/test/test_client.py::test_DSCClient_command 
enrobie/clients/discord/test/test_client.py::test_DSCClient_channels 
[gw0] [ 14%] PASSED enrobie/robie/test/test_robie.py::test_Robie_printer 
enrobie/clients/discord/test/test_client.py::test_DSCClient_message 
[gw0] [ 15%] PASSED enrobie/clients/discord/test/test_client.py::test_DSCClient_message 
enrobie/clients/mattermost/test/test_message.py::test_MTMMessage_reply 
[gw0] [ 16%] PASSED enrobie/clients/mattermost/test/test_message.py::test_MTMMessage_reply 
enrobie/clients/mattermost/test/test_message.py::test_MTMMessage 
[gw0] [ 17%] PASSED enrobie/clients/mattermost/test/test_message.py::test_MTMMessage 
enrobie/clients/mattermost/test/test_message.py::test_MTMMessage_samples 
[gw1] [ 18%] PASSED enrobie/plugins/autonick/test/test_plugin.py::test_AutoNickPlugin_cover 
enrobie/plugins/autonick/test/test_plugin.py::test_AutoNickPlugin 
[gw1] [ 19%] PASSED enrobie/plugins/autonick/test/test_plugin.py::test_AutoNickPlugin 
enrobie/utils/test/test_states.py::test_ClientChannels_basics 
[gw1] [ 20%] PASSED enrobie/utils/test/test_states.py::test_ClientChannels_basics 
enrobie/utils/test/test_states.py::test_ClientChannels 
[gw1] [ 21%] PASSED enrobie/utils/test/test_states.py::test_ClientChannels 
enrobie/utils/test/test_states.py::test_ClientPublish 
[gw1] [ 22%] PASSED enrobie/utils/test/test_states.py::test_ClientPublish 
enrobie/utils/test/test_states.py::test_ClientChannels_cover 
[gw1] [ 23%] PASSED enrobie/utils/test/test_states.py::test_ClientChannels_cover 
enrobie/robie/addons/test/test_logger.py::test_RobieLogger_cover 
[gw1] [ 25%] PASSED enrobie/robie/addons/test/test_logger.py::test_RobieLogger_cover 
enrobie/robie/addons/test/test_logger.py::test_RobieLogger_message 
[gw1] [ 26%] PASSED enrobie/robie/addons/test/test_logger.py::test_RobieLogger_message 
enrobie/clients/mattermost/test/test_command.py::test_MTMCommand 
[gw1] [ 27%] PASSED enrobie/clients/mattermost/test/test_command.py::test_MTMCommand 
enrobie/plugins/logger/test/test_history.py::test_LoggerHistory 
[gw1] [ 28%] PASSED enrobie/plugins/logger/test/test_history.py::test_LoggerHistory 
enrobie/plugins/logger/test/test_history.py::test_LoggerHistory_cover 
[gw2] [ 29%] PASSED enrobie/plugins/autojoin/test/test_plugin.py::test_AutoJoinPlugin_cover 
enrobie/plugins/autojoin/test/test_plugin.py::test_AutoJoinPlugin 
[gw1] [ 30%] PASSED enrobie/plugins/logger/test/test_history.py::test_LoggerHistory_cover 
enrobie/robie/models/test/test_command.py::test_RobieCommand 
[gw2] [ 31%] PASSED enrobie/plugins/autojoin/test/test_plugin.py::test_AutoJoinPlugin 
enrobie/robie/childs/test/test_client.py::test_RobieClient_cover 
[gw1] [ 32%] PASSED enrobie/robie/models/test/test_command.py::test_RobieCommand 
enrobie/clients/irc/test/test_command.py::test_IRCCommand 
[gw2] [ 33%] PASSED enrobie/robie/childs/test/test_client.py::test_RobieClient_cover 
enrobie/robie/childs/test/test_person.py::test_RobiePerson 
[gw1] [ 34%] PASSED enrobie/clients/irc/test/test_command.py::test_IRCCommand 
enrobie/robie/childs/test/test_robie.py::test_RobieChilds 
[gw2] [ 35%] PASSED enrobie/robie/childs/test/test_person.py::test_RobiePerson 
enrobie/clients/mattermost/test/test_client.py::test_MTMClient_compose 
[gw1] [ 36%] PASSED enrobie/robie/childs/test/test_robie.py::test_RobieChilds 
enrobie/clients/discord/test/test_command.py::test_DSCCommand 
[gw2] [ 37%] PASSED enrobie/clients/mattermost/test/test_client.py::test_MTMClient_compose 
enrobie/clients/mattermost/test/test_client.py::test_MTMClient_command 
[gw1] [ 38%] PASSED enrobie/clients/discord/test/test_command.py::test_DSCCommand 
enrobie/plugins/ainswer/test/test_plugin.py::test_AinswerPlugin_cover 
[gw2] [ 39%] PASSED enrobie/clients/mattermost/test/test_client.py::test_MTMClient_command 
enrobie/clients/mattermost/test/test_client.py::test_MTMClient_message 
[gw2] [ 40%] PASSED enrobie/clients/mattermost/test/test_client.py::test_MTMClient_message 
enrobie/clients/mattermost/test/test_client.py::test_MTMClient_channels 
[gw0] [ 41%] PASSED enrobie/clients/mattermost/test/test_message.py::test_MTMMessage_samples 
enrobie/plugins/nagios/test/test_plugin.py::test_NagiosPlugin 
[gw3] [ 42%] PASSED enrobie/clients/discord/test/test_client.py::test_DSCClient_channels 
enrobie/clients/discord/test/test_client.py::test_DSCClient_compose 
[gw0] [ 43%] PASSED enrobie/plugins/nagios/test/test_plugin.py::test_NagiosPlugin 
enrobie/plugins/nagios/test/test_plugin.py::test_NagiosPlugin_cover 
[gw3] [ 44%] PASSED enrobie/clients/discord/test/test_client.py::test_DSCClient_compose 
enrobie/robie/test/test_service.py::test_RobieService 
[gw1] [ 45%] FAILED enrobie/plugins/ainswer/test/test_plugin.py::test_AinswerPlugin_cover 
enrobie/plugins/ainswer/test/test_plugin.py::test_AinswerPlugin 
[gw1] [ 46%] PASSED enrobie/plugins/ainswer/test/test_plugin.py::test_AinswerPlugin 
enrobie/robie/models/test/test_models.py::test_RobieModels_cover 
[gw1] [ 47%] PASSED enrobie/robie/models/test/test_models.py::test_RobieModels_cover 
enrobie/utils/test/test_thread.py::test_DupliThread 
[gw1] [ 48%] PASSED enrobie/utils/test/test_thread.py::test_DupliThread 
enrobie/utils/test/test_thread.py::test_DupliThread_cover 
[gw1] [ 50%] PASSED enrobie/utils/test/test_thread.py::test_DupliThread_cover 
enrobie/clients/irc/test/test_client.py::test_IRCClient_compose 
[gw1] [ 51%] PASSED enrobie/clients/irc/test/test_client.py::test_IRCClient_compose 
enrobie/clients/irc/test/test_client.py::test_IRCClient 
[gw1] [ 52%] PASSED enrobie/clients/irc/test/test_client.py::test_IRCClient 
enrobie/clients/irc/test/test_client.py::test_IRCClient_command 
[gw1] [ 53%] PASSED enrobie/clients/irc/test/test_client.py::test_IRCClient_command 
enrobie/clients/irc/test/test_client.py::test_IRCClient_channels 
[gw1] [ 54%] FAILED enrobie/clients/irc/test/test_client.py::test_IRCClient_channels 
enrobie/clients/irc/test/test_client.py::test_IRCClient_message 
[gw1] [ 55%] PASSED enrobie/clients/irc/test/test_client.py::test_IRCClient_message 
enrobie/plugins/ainswer/test/test_memory.py::test_AinswerMemory_cover 
[gw1] [ 56%] PASSED enrobie/plugins/ainswer/test/test_memory.py::test_AinswerMemory_cover 
enrobie/plugins/ainswer/test/test_memory.py::test_AinswerMemory 
[gw1] [ 57%] PASSED enrobie/plugins/ainswer/test/test_memory.py::test_AinswerMemory 
enrobie/robie/childs/test/test_child.py::test_RobieChild_cover 
[gw1] [ 58%] PASSED enrobie/robie/childs/test/test_child.py::test_RobieChild_cover 
enrobie/plugins/ainswer/test/test_history.py::test_AinswerHistory_cover 
[gw1] [ 59%] PASSED enrobie/plugins/ainswer/test/test_history.py::test_AinswerHistory_cover 
enrobie/plugins/ainswer/test/test_history.py::test_AinswerHistory 
[gw1] [ 60%] PASSED enrobie/plugins/ainswer/test/test_history.py::test_AinswerHistory 
enrobie/robie/threads/test/test_thread.py::test_RobieThread_cover 
[gw1] [ 61%] PASSED enrobie/robie/threads/test/test_thread.py::test_RobieThread_cover 
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[hubert_privmsg-privmsg-:hubert!hubert@science.com PRIVMSG ircbot :ircbot] 
[gw1] [ 62%] PASSED enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[hubert_privmsg-privmsg-:hubert!hubert@science.com PRIVMSG ircbot :ircbot] 
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_engage 
[gw1] [ 63%] PASSED enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_engage 
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[random_privmsg-privmsg-:nick!user@host PRIVMSG ircbot :Hello ircbot] 
[gw1] [ 64%] PASSED enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[random_privmsg-privmsg-:nick!user@host PRIVMSG ircbot :Hello ircbot] 
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[random_chanmsg-chanmsg-:nick!user@host PRIVMSG #enrobie :Hello ircbot] 
[gw1] [ 65%] PASSED enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[random_chanmsg-chanmsg-:nick!user@host PRIVMSG #enrobie :Hello ircbot] 
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[hubert_chanmsg-chanmsg-:hubert!hubert@science.com PRIVMSG #enrobie :ircbot] 
[gw1] [ 66%] PASSED enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_prompt[hubert_chanmsg-chanmsg-:hubert!hubert@science.com PRIVMSG #enrobie :ircbot] 
enrobie/execution/test/test_crypts.py::test_arguments 
[gw1] [ 67%] PASSED enrobie/execution/test/test_crypts.py::test_arguments 
enrobie/execution/test/test_service.py::test_arguments 
[gw1] [ 68%] PASSED enrobie/execution/test/test_service.py::test_arguments 
enrobie/robie/models/test/test_message.py::test_RobieMessage 
[gw1] [ 69%] PASSED enrobie/robie/models/test/test_message.py::test_RobieMessage 
enrobie/robie/test/test_config.py::test_RobieConfig 
[gw1] [ 70%] PASSED enrobie/robie/test/test_config.py::test_RobieConfig 
enrobie/clients/discord/test/test_message.py::test_DSCMessage_reply 
[gw1] [ 71%] PASSED enrobie/clients/discord/test/test_message.py::test_DSCMessage_reply 
enrobie/clients/discord/test/test_message.py::test_DSCMessage 
[gw1] [ 72%] PASSED enrobie/clients/discord/test/test_message.py::test_DSCMessage 
enrobie/clients/discord/test/test_message.py::test_DSCMessage_samples 
[gw2] [ 73%] PASSED enrobie/clients/mattermost/test/test_client.py::test_MTMClient_channels 
enrobie/clients/mattermost/test/test_client.py::test_MTMClient 
[gw2] [ 75%] PASSED enrobie/clients/mattermost/test/test_client.py::test_MTMClient 
enrobie/robie/threads/test/test_client.py::test_RobieClientThread 
[gw3] [ 76%] PASSED enrobie/robie/test/test_service.py::test_RobieService 
enrobie/robie/test/test_service.py::test_RobieService_healths 
[gw2] [ 77%] PASSED enrobie/robie/threads/test/test_client.py::test_RobieClientThread 
enrobie/utils/test/test_importer.py::test_importer 
[gw2] [ 78%] PASSED enrobie/utils/test/test_importer.py::test_importer 
enrobie/robie/test/test_service.py::test_RobieService_cover 
[gw3] [ 79%] PASSED enrobie/robie/test/test_service.py::test_RobieService_healths 
enrobie/plugins/ainswer/test/test_models.py::test_AinswerModels 
[gw3] [ 80%] PASSED enrobie/plugins/ainswer/test/test_models.py::test_AinswerModels 
enrobie/robie/members/test/test_member.py::test_RobieMember_cover 
[gw0] [ 81%] PASSED enrobie/plugins/nagios/test/test_plugin.py::test_NagiosPlugin_cover 
enrobie/robie/addons/test/test_logger.py::test_RobieLogger 
[gw3] [ 82%] PASSED enrobie/robie/members/test/test_member.py::test_RobieMember_cover 
enrobie/clients/irc/test/test_message.py::test_IRCMessage_reply 
[gw0] [ 83%] PASSED enrobie/robie/addons/test/test_logger.py::test_RobieLogger 
enrobie/clients/irc/test/test_message.py::test_IRCMessage 
[gw3] [ 84%] PASSED enrobie/clients/irc/test/test_message.py::test_IRCMessage_reply 
enrobie/clients/irc/test/test_message.py::test_IRCMessage_samples 
[gw0] [ 85%] PASSED enrobie/clients/irc/test/test_message.py::test_IRCMessage 
enrobie/plugins/enhomie/test/test_plugin.py::test_HomiePlugin 
[gw0] [ 86%] PASSED enrobie/plugins/enhomie/test/test_plugin.py::test_HomiePlugin 
enrobie/plugins/logger/test/test_plugin.py::test_LoggerPlugin_cover 
[gw1] [ 87%] FAILED enrobie/clients/discord/test/test_message.py::test_DSCMessage_samples 
enrobie/plugins/status/test/test_plugin.py::test_StatusPlugin_cover 
[gw2] [ 88%] PASSED enrobie/robie/test/test_service.py::test_RobieService_cover 
enrobie/plugins/status/test/test_plugin.py::test_StatusPlugin 
[gw2] [ 89%] PASSED enrobie/plugins/status/test/test_plugin.py::test_StatusPlugin 
enrobie/robie/addons/test/test_queue.py::test_RobieQueueItem 
[gw2] [ 90%] PASSED enrobie/robie/addons/test/test_queue.py::test_RobieQueueItem 
enrobie/robie/childs/test/test_plugin.py::test_RobiePlugin_cover 
[gw2] [ 91%] PASSED enrobie/robie/childs/test/test_plugin.py::test_RobiePlugin_cover 
enrobie/execution/test/test_config.py::test_arguments 
[gw2] [ 92%] PASSED enrobie/execution/test/test_config.py::test_arguments 
enrobie/utils/test/test_param.py::test_InvalidParam 
[gw2] [ 93%] PASSED enrobie/utils/test/test_param.py::test_InvalidParam 
[gw1] [ 94%] PASSED enrobie/plugins/status/test/test_plugin.py::test_StatusPlugin_cover 
enrobie/robie/addons/test/test_queue.py::test_RobieQueue 
[gw1] [ 95%] PASSED enrobie/robie/addons/test/test_queue.py::test_RobieQueue 
[gw3] [ 96%] PASSED enrobie/clients/irc/test/test_message.py::test_IRCMessage_samples 
enrobie/plugins/enhomie/test/test_plugin.py::test_HomiePlugin_cover 
[gw0] [ 97%] PASSED enrobie/plugins/logger/test/test_plugin.py::test_LoggerPlugin_cover 
enrobie/plugins/logger/test/test_plugin.py::test_LoggerPlugin 
[gw0] [ 98%] PASSED enrobie/plugins/logger/test/test_plugin.py::test_LoggerPlugin 
[gw3] [100%] PASSED enrobie/plugins/enhomie/test/test_plugin.py::test_HomiePlugin_cover 

=================================== FAILURES ===================================
___________________________ test_AinswerPlugin_cover ___________________________
[gw1] linux -- Python 3.12.11 /home/runner/work/enrobie/enrobie/main/.venv-package/bin/python3

service = <enrobie.robie.service.RobieService object at 0x7fea6b104680>
client_dscsock = <function client_dscsock.<locals>._fixture at 0x7fea6b103b00>
client_ircsock = <function client_ircsock.<locals>._fixture at 0x7fea6b2d39c0>
client_mtmsock = <function client_mtmsock.<locals>._fixture at 0x7fea6b2d02c0>

    def test_AinswerPlugin_cover(
        service: 'RobieService',
        client_dscsock: DSCClientSocket,
        client_ircsock: IRCClientSocket,
        client_mtmsock: MTMClientSocket,
    ) -> None:
        """
        Perform various tests associated with relevant routines.
    
        :param service: Ancilary Chatting Robie class instance.
        :param client_dscsock: Object to mock client connection.
        :param client_ircsock: Object to mock client connection.
        :param client_mtmsock: Object to mock client connection.
        """
    
        robie = service.robie
        childs = robie.childs
        clients = childs.clients
    
        plugin = (
            service.plugins
            .childs['ainswer'])
    
        assert isinstance(
            plugin, AinswerPlugin)
    
        history = plugin.history
    
    
        client_dscsock(DSCEVENTS)
        client_ircsock(IRCEVENTS)
        client_mtmsock(MTMEVENTS)
    
    
        testing = TestModel()
    
        override_agent = (
            plugin.agent
            .override(
                model=testing))
    
        with override_agent:
    
    
            service.limit(
                plugins=[
                    'ainswer',
                    'logger',
                    'status'])
    
            service.start()
    
    
            thread = Thread(
                target=service.operate)
    
            thread.start()
    
    
            block_sleep(5)
    
    
            select = (
                clients['ircbot']
                .channels
                .select('#enrobie'))
    
            assert select is not None
    
            records = (
                history.search(
                    client='ircbot',
                    anchor='#enrobie'))
    
>           assert len(records) >= 1
E           assert 0 >= 1
E            +  where 0 = len([])

enrobie/plugins/ainswer/test/test_plugin.py:183: AssertionError
----------------------------- Captured stdout call -----------------------------

‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.688687+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':robot: Ainswer/`ainswer`: :green_circle: `normal` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.688797+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':wood: Logger/`logger`: :green_circle: `normal` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.688953+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :ü§ñ Ainswer/ainswer: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.689075+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :ü™µ Logger/logger: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.689242+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':robot: Ainswer/`ainswer`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.689365+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':wood: Logger/`logger`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.789751+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :hourglass: `pending` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.789864+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: IRC/`ircbot`: :hourglass: `pending` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.789968+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Mattermost/`mtmbot`: :green_circle: `normal` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790146+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Discord/dscbot: ‚è≥ pending for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790315+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ IRC/ircbot: ‚è≥ pending for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790453+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Mattermost/mtmbot: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790644+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Discord/`dscbot`: :hourglass: `pending` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790779+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: IRC/`ircbot`: :hourglass: `pending` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.790909+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Mattermost/`mtmbot`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.819963+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'READY'
    opcode: 0
    data: dict
      heartbeat_interval: 100
      resume_gateway_url: 'wss://resume.dsc.gg'
      session_id: 'mocked'
      user: dict
        username: 'dscbot'
        id: 'dscunq'
    seqno: 1
    original: dict
      d: dict
        heartbeat_interval: 100
        resume_gateway_url: 'wss://resume.dsc.gg'
        session_id: 'mocked'
        user: dict
          username: 'dscbot'
          id: 'dscunq'
      op: 0
      s: 1
      t: 'READY'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.823991+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '001'
    params: 'ircbot :Welcome to network'
    original: ':mocked 001 ircbot :Welcome to network'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.826852+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: None
    data: None
    broadcast: None
    seqno: None
    status: 'OK'
    error: None
    seqre: 1
    original: dict
      seq_reply: 1
      status: 'OK'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891300+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :green_circle: `normal` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891398+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: IRC/`ircbot`: :green_circle: `normal` <t:1751942330:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891575+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Discord/dscbot: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891689+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ IRC/ircbot: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891865+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Discord/`dscbot`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.891977+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: IRC/`ircbot`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.921942+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 7
    data: None
    seqno: None
    original: dict
      d: None
      op: 7
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.926507+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '376'
    params: 'ircbot :End of /MOTD command.'
    original: ':mocked 376 ircbot :End of /MOTD command.'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:50.928720+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'hello'
    data: None
    broadcast: None
    seqno: 0
    status: None
    error: None
    seqre: None
    original: dict
      event: 'hello'
      seq: 0
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.030857+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'status_change'
    data: dict
      status: 'online'
      user_id: 'mtmunq'
    broadcast: dict
      user_id: 'mtmunq'
    seqno: 1
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        user_id: 'mtmunq'
      data: dict
        status: 'online'
        user_id: 'mtmunq'
      event: 'status_change'
      seq: 1
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.129917+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '376'
    params: 'ircbot :End of /MOTD command.'
    original: ':mocked 376 ircbot :End of /MOTD command.'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.132017+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: None
    data: None
    broadcast: None
    seqno: None
    status: 'OK'
    error: None
    seqre: 2
    original: dict
      seq_reply: 2
      status: 'OK'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.232405+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: None
    data: None
    broadcast: None
    seqno: None
    status: 'OK'
    error: None
    seqre: 3
    original: dict
      seq_reply: 3
      status: 'OK'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.333629+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '376'
    params: 'ircbot :End of /MOTD command.'
    original: ':mocked 376 ircbot :End of /MOTD command.'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.336381+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'D'
      post: '{"user_id":"userid","channel_id":"privid","message":"Hello mtmbot"}'
      sender_name: '@user'
    broadcast: dict
      channel_id: 'privid'
    seqno: 4
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'privid'
      data: dict
        channel_type: 'D'
        post: '{"user_id":"userid","channel_id":"privid","message":"Hello mtmbot"}'
        sender_name: '@user'
      event: 'posted'
      seq: 4
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: 'privid'
    message: 'Hello mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is mtmbot. Use some markdown and emojis.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: mattermost
Message kind: privmsg
Message time: 2025-07-08T02:38:51.336381+0000

**User Metadata**
User nickname: user
User serverID: userid

**Additional Metadata**
Your nickname: mtmbot
Your serverID: mtmunq

**Question**
Hello mtmbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.479812+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'PRIVMSG'
    params: 'ircbot :Hello ircbot'
    original: ':nick!user@host PRIVMSG ircbot :Hello ircbot'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'nick'
    recipient: 'ircbot'
    message: 'Hello ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.480039+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'P'
      post: '{"user_id":"userid","channel_id":"chanid","message":"Hello world"}'
      sender_name: '@user'
    broadcast: dict
      channel_id: 'chanid'
    seqno: 5
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'chanid'
      data: dict
        channel_type: 'P'
        post: '{"user_id":"userid","channel_id":"chanid","message":"Hello world"}'
        sender_name: '@user'
      event: 'posted'
      seq: 5
    kind: 'chanmsg'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: 'chanid'
    message: 'Hello world'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.585784+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'PRIVMSG'
    params: '# :Hello world'
    original: ':nick!user@host PRIVMSG # :Hello world'
    kind: 'chanmsg'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: 'nick'
    recipient: '#'
    message: 'Hello world'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.585911+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'P'
      post: '{"user_id":"mtmunq","channel_id":"chanid","message":"Hello user"}'
      sender_name: '@mtmbot'
    broadcast: dict
      channel_id: 'chanid'
    seqno: 6
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'chanid'
      data: dict
        channel_type: 'P'
        post: '{"user_id":"mtmunq","channel_id":"chanid","message":"Hello user"}'
        sender_name: '@mtmbot'
      event: 'posted'
      seq: 6
    kind: 'chanmsg'
    isme: True
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'mtmbot'
      - 'mtmunq'
    recipient: 'chanid'
    message: 'Hello user'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.688411+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'PRIVMSG'
    params: '#funchat :Hello world'
    original: ':nick!user@host PRIVMSG #funchat :Hello world'
    kind: 'chanmsg'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: 'nick'
    recipient: '#funchat'
    message: 'Hello world'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.690445+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'hello'
    data: None
    broadcast: dict
      user_id: 'mtmunq'
    seqno: None
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        user_id: 'mtmunq'
      event: 'hello'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.795144+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'ircbot!user@host'
    command: 'NICK'
    params: ':botirc'
    original: ':ircbot!user@host NICK :botirc'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'botirc'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.795377+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'channel_updated'
    data: dict
      channel: '{"id":"enrobie","name":"enrobie","header":"Test topic is changed"}'
    broadcast: dict
      channel_id: 'enrobie'
    seqno: 2
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'enrobie'
      data: dict
        channel: '{"id":"enrobie","name":"enrobie","header":"Test topic is changed"}'
      event: 'channel_updated'
      seq: 2
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.908329+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'botirc!user@host'
    command: 'PRIVMSG'
    params: '# :Hello nick'
    original: ':botirc!user@host PRIVMSG # :Hello nick'
    kind: 'chanmsg'
    isme: True
    hasme: False
    whome: 'botirc'
    author: 'botirc'
    recipient: '#'
    message: 'Hello nick'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:51.913501+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'P'
      post: '{"user_id":"userid","channel_id":"enrobie","message":"Hello mtmbot"}'
      sender_name: '@user'
    broadcast: dict
      channel_id: 'enrobie'
    seqno: 3
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'enrobie'
      data: dict
        channel_type: 'P'
        post: '{"user_id":"userid","channel_id":"enrobie","message":"Hello mtmbot"}'
        sender_name: '@user'
      event: 'posted'
      seq: 3
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: 'enrobie'
    message: 'Hello mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.008776+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'botirc!user@host'
    command: 'NICK'
    params: ':ircbot'
    original: ':botirc!user@host NICK :ircbot'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.008849+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 10
    data: dict
      heartbeat_interval: 100
      _trace: list
        - '["g....0}]'
    seqno: None
    original: dict
      d: dict
        heartbeat_interval: 100
        _trace: list
          - '["g....0}]'
      op: 10
      s: None
      t: None
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.013953+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'D'
      post: '{"user_id":"userid","channel_id":"privid","message":"Hello mtmbot"}'
      sender_name: '@user'
    broadcast: dict
      channel_id: 'privid'
    seqno: 4
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'privid'
      data: dict
        channel_type: 'D'
        post: '{"user_id":"userid","channel_id":"privid","message":"Hello mtmbot"}'
        sender_name: '@user'
      event: 'posted'
      seq: 4
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: 'privid'
    message: 'Hello mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.109229+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'ircbot'
    command: 'JOIN'
    params: ':#enrobie'
    original: ':ircbot JOIN :#enrobie'
    kind: 'event'
    isme: True
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.109300+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'RESUMED'
    opcode: 0
    data: dict
      _trace: list
        - '["g...3}]}]'
    seqno: 1
    original: dict
      d: dict
        _trace: list
          - '["g...3}]}]'
      op: 0
      s: 1
      t: 'RESUMED'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.114601+0000
  client: 'mtmbot'
  person: 'hubert'
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'P'
      post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"enrobie","message":"mtmbot"}'
      sender_name: '@hubert'
    broadcast: dict
      channel_id: 'enrobie'
    seqno: 6
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'enrobie'
      data: dict
        channel_type: 'P'
        post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"enrobie","message":"mtmbot"}'
        sender_name: '@hubert'
      event: 'posted'
      seq: 6
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'hubert'
      - 'kjf9al2klaiietalkw'
    recipient: 'enrobie'
    message: 'mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.209656+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '353'
    params: 'ircbot = #enrobie :ircbot robert trebor sirrah'
    original: ':mocked 353 ircbot = #enrobie :ircbot robert trebor sirrah'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.215048+0000
  client: 'mtmbot'
  person: 'hubert'
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'P'
      post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"enrobie","message":"mtmbot"}'
      sender_name: '@hubert'
    broadcast: dict
      channel_id: 'enrobie'
    seqno: 6
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'enrobie'
      data: dict
        channel_type: 'P'
        post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"enrobie","message":"mtmbot"}'
        sender_name: '@hubert'
      event: 'posted'
      seq: 6
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'hubert'
      - 'kjf9al2klaiietalkw'
    recipient: 'enrobie'
    message: 'mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.311142+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '332'
    params: 'ircbot #enrobie :Test topic already set'
    original: ':mocked 332 ircbot #enrobie :Test topic already set'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.313532+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 3
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 3
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - None
      - 'privid'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.315523+0000
  client: 'mtmbot'
  person: 'hubert'
  event: ClientEvent
    type: 'posted'
    data: dict
      channel_type: 'D'
      post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"privid","message":"mtmbot"}'
      sender_name: '@hubert'
    broadcast: dict
      channel_id: 'privid'
    seqno: 7
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'privid'
      data: dict
        channel_type: 'D'
        post: '{"user_id":"kjf9al2klaiietalkw","channel_id":"privid","message":"mtmbot"}'
        sender_name: '@hubert'
      event: 'posted'
      seq: 7
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: tuple
      - 'hubert'
      - 'kjf9al2klaiietalkw'
    recipient: 'privid'
    message: 'mtmbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.411609+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'TOPIC'
    params: '#enrobie :Test topic is changed'
    original: ':nick!user@host TOPIC #enrobie :Test topic is changed'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.414002+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'chanid'
      guild_id: 'guldid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello world'
    seqno: 4
    original: dict
      d: dict
        channel_id: 'chanid'
        guild_id: 'guldid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello world'
      op: 0
      s: 4
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - 'guldid'
      - 'chanid'
    message: 'Hello world'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.416315+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'channel_updated'
    data: dict
      channel: '{"id":"enrobie","name":"enrobie","header":"Test topic"}'
    broadcast: dict
      channel_id: 'enrobie'
    seqno: 8
    status: None
    error: None
    seqre: None
    original: dict
      broadcast: dict
        channel_id: 'enrobie'
      data: dict
        channel: '{"id":"enrobie","name":"enrobie","header":"Test topic"}'
      event: 'channel_updated'
      seq: 8
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.480836+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Mattermost/`mtmbot`: :red_circle: `failure` <t:1751942332:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.480965+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Mattermost/mtmbot: üî¥ failure for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.481087+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Mattermost/`mtmbot`: :red_circle: `failure` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.512048+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'KICK'
    params: '#enrobie ircbot :foo'
    original: ':nick!user@host KICK #enrobie ircbot :foo'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.514472+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'chanid'
      guild_id: 'guldid'
      author: dict
        id: 'dscunq'
        username: 'dscbot'
      content: 'Hello user'
    seqno: 5
    original: dict
      d: dict
        channel_id: 'chanid'
        guild_id: 'guldid'
        author: dict
          id: 'dscunq'
          username: 'dscbot'
        content: 'Hello user'
      op: 0
      s: 5
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: True
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'dscbot'
      - 'dscunq'
    recipient: tuple
      - 'guldid'
      - 'chanid'
    message: 'Hello user'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.516675+0000
  client: 'mtmbot'
  person: None
  event: ClientEvent
    type: 'discon'
    data: None
    broadcast: None
    seqno: 69420
    status: None
    error: dict
      reason: 'EOF'
    seqre: None
    original: dict
      error: dict
        reason: 'EOF'
      event: 'discon'
      seq: 69420
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'mtmbot'
      - 'mtmunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.613234+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'ircbot'
    command: 'JOIN'
    params: ':#enrobie'
    original: ':ircbot JOIN :#enrobie'
    kind: 'event'
    isme: True
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.615644+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'GUILD_CREATE'
    opcode: 0
    data: dict
      channels: list
        - dict
          id: 'enrobie'
          topic: 'Test topic already set'
          name: 'enrobie'
    seqno: 2
    original: dict
      d: dict
        channels: list
          - dict
            id: 'enrobie'
            topic: 'Test topic already set'
            name: 'enrobie'
      op: 0
      s: 2
      t: 'GUILD_CREATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.713752+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '353'
    params: 'ircbot = #enrobie :ircbot robert trebor sirrah'
    original: ':mocked 353 ircbot = #enrobie :ircbot robert trebor sirrah'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.716146+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'CHANNEL_UPDATE'
    opcode: 0
    data: dict
      id: 'enrobie'
      topic: 'Test topic is changed'
      name: 'enrobie'
    seqno: 3
    original: dict
      d: dict
        id: 'enrobie'
        topic: 'Test topic is changed'
        name: 'enrobie'
      op: 0
      s: 3
      t: 'CHANNEL_UPDATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.814173+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'mocked'
    command: '332'
    params: 'ircbot #enrobie :Test topic is changed'
    original: ':mocked 332 ircbot #enrobie :Test topic is changed'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.816669+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 4
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 4
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.915501+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'PRIVMSG'
    params: '#enrobie :Hello ircbot'
    original: ':nick!user@host PRIVMSG #enrobie :Hello ircbot'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'nick'
    recipient: '#enrobie'
    message: 'Hello ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:52.917086+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 5
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 5
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - None
      - 'privid'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.015947+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'PRIVMSG'
    params: 'ircbot :Hello ircbot'
    original: ':nick!user@host PRIVMSG ircbot :Hello ircbot'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'nick'
    recipient: 'ircbot'
    message: 'Hello ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.017534+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 7
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 7
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.117547+0000
  client: 'ircbot'
  person: 'hubert'
  event: ClientEvent
    prefix: 'hubert!hubert@science.com'
    command: 'PRIVMSG'
    params: '#enrobie :ircbot'
    original: ':hubert!hubert@science.com PRIVMSG #enrobie :ircbot'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'hubert'
    recipient: '#enrobie'
    message: 'ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.118699+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 7
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 7
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is ircbot. Keep it short and use colors.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: irc
Message kind: privmsg
Message time: 2025-07-08T02:38:51.479812+0000

**User Metadata**
User nickname: nick
User serverID: nick

**Additional Metadata**
Your nickname: ircbot
Your serverID: ircbot

**Question**
Hello ircbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.197767+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'privid'
    message: 'I'm sorry user, I'm afraid I can't do that.'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.220305+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 8
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 8
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - None
      - 'privid'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.222016+0000
  client: 'ircbot'
  person: 'hubert'
  event: ClientEvent
    prefix: 'hubert!hubert@science.com'
    command: 'PRIVMSG'
    params: '#enrobie :ircbot'
    original: ':hubert!hubert@science.com PRIVMSG #enrobie :ircbot'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'hubert'
    recipient: '#enrobie'
    message: 'ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.293320+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':robot: Ainswer/`ainswer`: :red_circle: `failure` <t:1751942333:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.293451+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :ü§ñ Ainswer/ainswer: üî¥ failure for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.293565+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':robot: Ainswer/`ainswer`: :red_circle: `failure` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.321721+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'CHANNEL_UPDATE'
    opcode: 0
    data: dict
      id: 'enrobie'
      topic: 'Test topic'
      name: 'enrobie'
    seqno: 9
    original: dict
      d: dict
        id: 'enrobie'
        topic: 'Test topic'
        name: 'enrobie'
      op: 0
      s: 9
      t: 'CHANNEL_UPDATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.323669+0000
  client: 'ircbot'
  person: 'hubert'
  event: ClientEvent
    prefix: 'hubert!hubert@science.com'
    command: 'PRIVMSG'
    params: 'ircbot :ircbot'
    original: ':hubert!hubert@science.com PRIVMSG ircbot :ircbot'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: 'ircbot'
    author: 'hubert'
    recipient: 'ircbot'
    message: 'ircbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.423415+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 9
    data: None
    seqno: None
    original: dict
      op: 9
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.424124+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'TOPIC'
    params: '#enrobie :Test topic'
    original: ':nick!user@host TOPIC #enrobie :Test topic'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.494432+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :red_circle: `failure` <t:1751942333:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.494590+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Discord/dscbot: üî¥ failure for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.494737+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Discord/`dscbot`: :red_circle: `failure` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.524808+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'trebor!user@host'
    command: 'NICK'
    params: 'treb0r'
    original: ':trebor!user@host NICK treb0r'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.625861+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'nick!user@host'
    command: 'NICK'
    params: 'n1ck'
    original: ':nick!user@host NICK n1ck'
    kind: 'event'
    isme: False
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.727062+0000
  client: 'ircbot'
  person: None
  event: ClientEvent
    prefix: 'ircbot'
    command: 'PART'
    params: ':#enrobie'
    original: ':ircbot PART :#enrobie'
    kind: 'event'
    isme: True
    hasme: False
    whome: 'ircbot'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.897703+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: IRC/`ircbot`: :red_circle: `failure` <t:1751942333:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.897820+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ IRC/ircbot: üî¥ failure for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:53.897929+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: IRC/`ircbot`: :red_circle: `failure` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:54.530107+0000
  client: 'ircbot'
  event: 'PRIVMSG nick :I'm sorry nick, I'm afraid I can't do that.'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is mtmbot. Use some markdown and emojis.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: mattermost
Message kind: chanmsg
Message time: 2025-07-08T02:38:51.913501+0000

**User Metadata**
User nickname: user
User serverID: userid

**Additional Metadata**
Your nickname: mtmbot
Your serverID: mtmunq

**Channel Metadata**
Unique: enrobie
Topic: Test topic

**Channel Recents**
These are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.
[2025-07-08T02:38:52+0000] <userid> Hello mtmbot
[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot
[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot

**Question**
Hello mtmbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1025 HTTP Request: GET https://discord.com/api/v10/gateway "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: GET https://mocked/api/v4/users/me "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a30170df-7bab-4465-8ea4-8113a31376cf', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is mtmbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: mattermost\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.336381+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: mtmbot\nYour serverID: mtmunq\n\n**Question**\nHello mtmbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Mattermost.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.436244 seconds
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a30170df-7bab-4465-8ea4-8113a31376cf', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is mtmbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: mattermost\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.336381+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: mtmbot\nYour serverID: mtmunq\n\n**Question**\nHello mtmbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Mattermost.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1603 1 retry left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.839256 seconds
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a30170df-7bab-4465-8ea4-8113a31376cf', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is mtmbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: mattermost\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.336381+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: mtmbot\nYour serverID: mtmunq\n\n**Question**\nHello mtmbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Mattermost.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1550 Raising connection error
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a57ffc2a-331b-4726-8f7a-59de8e54e37b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is ircbot. Keep it short and use colors.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: irc\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.479812+0000\n\n**User Metadata**\nUser nickname: nick\nUser serverID: nick\n\n**Additional Metadata**\nYour nickname: ircbot\nYour serverID: ircbot\n\n**Question**\nHello ircbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for IRCv2.', 'maxLength': 350, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.386259 seconds
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a57ffc2a-331b-4726-8f7a-59de8e54e37b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is ircbot. Keep it short and use colors.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: irc\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.479812+0000\n\n**User Metadata**\nUser nickname: nick\nUser serverID: nick\n\n**Additional Metadata**\nYour nickname: ircbot\nYour serverID: ircbot\n\n**Question**\nHello ircbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for IRCv2.', 'maxLength': 350, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1603 1 retry left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.929015 seconds
INFO     httpx:_client.py:1025 HTTP Request: POST https://mocked/api/v4/posts "HTTP/1.1 200 OK"
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-a57ffc2a-331b-4726-8f7a-59de8e54e37b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is ircbot. Keep it short and use colors.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: irc\nMessage kind: privmsg\nMessage time: 2025-07-08T02:38:51.479812+0000\n\n**User Metadata**\nUser nickname: nick\nUser serverID: nick\n\n**Additional Metadata**\nYour nickname: ircbot\nYour serverID: ircbot\n\n**Question**\nHello ircbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for IRCv2.', 'maxLength': 350, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1550 Raising connection error
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-04040734-8187-49b1-8195-f3faea2b1aec', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is mtmbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: mattermost\nMessage kind: chanmsg\nMessage time: 2025-07-08T02:38:51.913501+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: mtmbot\nYour serverID: mtmunq\n\n**Channel Metadata**\nUnique: enrobie\nTopic: Test topic\n\n**Channel Recents**\nThese are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.\n[2025-07-08T02:38:52+0000] <userid> Hello mtmbot\n[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot\n[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot\n\n**Question**\nHello mtmbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Mattermost.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.450317 seconds
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-04040734-8187-49b1-8195-f3faea2b1aec', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is mtmbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: mattermost\nMessage kind: chanmsg\nMessage time: 2025-07-08T02:38:51.913501+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: mtmbot\nYour serverID: mtmunq\n\n**Channel Metadata**\nUnique: enrobie\nTopic: Test topic\n\n**Channel Recents**\nThese are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.\n[2025-07-08T02:38:52+0000] <userid> Hello mtmbot\n[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot\n[2025-07-08T02:38:52+0000] <kjf9al2klaiietalkw> mtmbot\n\n**Question**\nHello mtmbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Mattermost.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1603 1 retry left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.809539 seconds
---------------------------- Captured log teardown -----------------------------
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1550 Raising connection error
___________________________ test_IRCClient_channels ____________________________
[gw1] linux -- Python 3.12.11 /home/runner/work/enrobie/enrobie/main/.venv-package/bin/python3

service = <enrobie.robie.service.RobieService object at 0x7fea6a5868a0>
client_ircsock = <function client_ircsock.<locals>._fixture at 0x7fea58e1cae0>

    def test_IRCClient_channels(
        service: 'RobieService',
        client_ircsock: IRCClientSocket,
    ) -> None:
        """
        Perform various tests associated with relevant routines.
    
        :param service: Ancilary Chatting Robie class instance.
        :param client_ircsock: Object to mock client connection.
        """
    
        robie = service.robie
        childs = robie.childs
        clients = childs.clients
    
        client = clients['ircbot']
    
        assert isinstance(
            client, IRCClient)
    
    
        client_ircsock(IRCEVENTS)
    
    
        service.limit(
            clients=['ircbot'],
            plugins=['status'])
    
        service.start()
    
    
        thread = Thread(
            target=service.operate)
    
        thread.start()
    
    
        block_sleep(5)
    
    
        select = (
            client.channels
            .select('#enrobie'))
    
>       assert select is not None
E       assert None is not None

enrobie/clients/irc/test/test_client.py:318: AssertionError
------------------------------ Captured log setup ------------------------------
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 08 Jul 2025 02:38:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'43'), (b'Connection', b'keep-alive'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-discord-features', b'chat'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=%2FF8W%2F%2FPY2yQvyaBY6rv%2FfKLakSVN3JLKlcptL55%2FEgbzEhF7qnOQMExwF42PMlvHdDxCqD5qRT5vSzAjfIJ%2FBNTs%2FoTrCP0shii%2BYGPI%2F4C1Ce%2FdWRVPHP%2Bidauv"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Reporting-Endpoints', b'csp-sentry="https://o64374.ingest.sentry.io/api/5441894/security/?sentry_key=8fbbce30bf5244ec9429546beef21870&sentry_environment=stable"'), (b'Content-Security-Policy', b"frame-ancestors 'none'; default-src https://o64374.ingest.sentry.io; report-to csp-sentry; report-uri https://o64374.ingest.sentry.io/api/5441894/security/?sentry_key=8fbbce30bf5244ec9429546beef21870&sentry_environment=stable"), (b'Server', b'cloudflare'), (b'CF-RAY', b'95bc35569d28cec5-SJC')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://discord.com/api/v10/channels/enrobie/messages "HTTP/1.1 401 Unauthorized"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 08 Jul 2025 02:38:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'43'), (b'Connection', b'keep-alive'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-discord-features', b'chat'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'cf-cache-status', b'DYNAMIC'), (b'Report-To', b'{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=cnzzE0bvsF6z6muj8hjxkGGnDGU%2F2A1tRXKv95BlMf%2B9SwkKY6HHcHJ%2Ftl%2F6hmrlfYBG4CgeKQVfgIulJzDIFETeIjzLQYjJOcColgJVFJOMxf3dMHyCwm18kMEo"}],"group":"cf-nel","max_age":604800}'), (b'NEL', b'{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'), (b'X-Content-Type-Options', b'nosniff'), (b'Reporting-Endpoints', b'csp-sentry="https://o64374.ingest.sentry.io/api/5441894/security/?sentry_key=8fbbce30bf5244ec9429546beef21870&sentry_environment=stable"'), (b'Content-Security-Policy', b"frame-ancestors 'none'; default-src https://o64374.ingest.sentry.io; report-to csp-sentry; report-uri https://o64374.ingest.sentry.io/api/5441894/security/?sentry_key=8fbbce30bf5244ec9429546beef21870&sentry_environment=stable"), (b'Server', b'cloudflare'), (b'CF-RAY', b'95bc3557ceb1cec5-SJC')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://discord.com/api/v10/channels/privid/messages "HTTP/1.1 401 Unauthorized"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
----------------------------- Captured stdout call -----------------------------

‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:38:57.522073+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ IRC/ircbot: ‚è≥ pending for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

___________________________ test_DSCMessage_samples ____________________________
[gw1] linux -- Python 3.12.11 /home/runner/work/enrobie/enrobie/main/.venv-package/bin/python3

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-0/popen-gw1/test_DSCMessage_samples0')
service = <enrobie.robie.service.RobieService object at 0x7fea58eaafc0>
client_dscsock = <function client_dscsock.<locals>._fixture at 0x7fea58e01f80>

    def test_DSCMessage_samples(
        tmp_path: Path,
        service: 'RobieService',
        client_dscsock: DSCClientSocket,
    ) -> None:
        """
        Perform various tests associated with relevant routines.
    
        :param tmp_path: pytest object for temporal filesystem.
        :param service: Ancilary Chatting Robie class instance.
        :param client_dscsock: Object to mock client connection.
        """
    
        robie = service.robie
        childs = robie.childs
        clients = childs.clients
    
        client = clients['dscbot']
    
        assert isinstance(
            client, DSCClient)
    
    
        messages: list[DSCMessage] = []
    
    
        def _callback(
            mitem: 'RobieMessage',
        ) -> None:
    
            assert isinstance(
                mitem, DSCMessage)
    
            messages.append(mitem)
    
    
        (client.publish
         .subscribe(_callback))
    
    
        client_dscsock(DSCEVENTS)
    
        service.limit(
            clients=['dscbot'],
            plugins=['status'])
    
        service.start()
    
    
        thread = Thread(
            target=service.operate)
    
        thread.start()
    
    
        block_sleep(5)
    
    
        sample_path = (
            SAMPLES / 'messages.json')
    
        # Because of ones in helper
        maximum = len(DSCEVENTS) + 4
    
        _messages = [
            {'client': x.client,
             'family': x.family,
             'kind': x.kind,
             'person': x.person,
             'isme': x.isme,
             'hasme': x.hasme,
             'whome': x.whome,
             'author': x.author,
             'anchor': x.anchor,
             'message': x.message,
             'event': x.event}
            for x in
            messages[:maximum]]
    
        sample = load_sample(
            path=sample_path,
            update=ENPYRWS,
            content=_messages)
    
        expect = prep_sample(
            content=_messages)
    
>       assert expect == sample
E       assert '[]' == '[\n  {\n    ...    }\n  }\n]'
E         
E         + []
E         - [
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": "READY",
E         -       "opcode": 0,
E         -       "data": {
E         -         "heartbeat_interval": 100,
E         -         "resume_gateway_url": "wss://resume.dsc.gg",
E         -         "session_id": "mocked",
E         -         "user": {
E         -           "username": "dscbot",
E         -           "id": "dscunq"
E         -         }
E         -       },
E         -       "seqno": 1,
E         -       "original": {
E         -         "d": {
E         -           "heartbeat_interval": 100,
E         -           "resume_gateway_url": "wss://resume.dsc.gg",
E         -           "session_id": "mocked",
E         -           "user": {
E         -             "username": "dscbot",
E         -             "id": "dscunq"
E         -           }
E         -         },
E         -         "op": 0,
E         -         "s": 1,
E         -         "t": "READY"
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": null,
E         -       "opcode": 7,
E         -       "data": null,
E         -       "seqno": null,
E         -       "original": {
E         -         "d": null,
E         -         "op": 7
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": null,
E         -       "opcode": 10,
E         -       "data": {
E         -         "heartbeat_interval": 100,
E         -         "_trace": [
E         -           "[\"g....0}]"
E         -         ]
E         -       },
E         -       "seqno": null,
E         -       "original": {
E         -         "d": {
E         -           "heartbeat_interval": 100,
E         -           "_trace": [
E         -             "[\"g....0}]"
E         -           ]
E         -         },
E         -         "op": 10,
E         -         "s": null,
E         -         "t": null
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": "RESUMED",
E         -       "opcode": 0,
E         -       "data": {
E         -         "_trace": [
E         -           "[\"g...3}]}]"
E         -         ]
E         -       },
E         -       "seqno": 1,
E         -       "original": {
E         -         "d": {
E         -           "_trace": [
E         -             "[\"g...3}]}]"
E         -           ]
E         -         },
E         -         "op": 0,
E         -         "s": 1,
E         -         "t": "RESUMED"
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "privmsg",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "user",
E         -       "userid"
E         -     ],
E         -     "anchor": "userid",
E         -     "message": "Hello dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "privid",
E         -         "author": {
E         -           "id": "userid",
E         -           "username": "user"
E         -         },
E         -         "content": "Hello dscbot"
E         -       },
E         -       "seqno": 3,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "privid",
E         -           "author": {
E         -             "id": "userid",
E         -             "username": "user"
E         -           },
E         -           "content": "Hello dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 3,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "privmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "user",
E         -         "userid"
E         -       ],
E         -       "recipient": [
E         -         null,
E         -         "privid"
E         -       ],
E         -       "message": "Hello dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "chanmsg",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "user",
E         -       "userid"
E         -     ],
E         -     "anchor": "guldid:chanid",
E         -     "message": "Hello world",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "chanid",
E         -         "guild_id": "guldid",
E         -         "author": {
E         -           "id": "userid",
E         -           "username": "user"
E         -         },
E         -         "content": "Hello world"
E         -       },
E         -       "seqno": 4,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "chanid",
E         -           "guild_id": "guldid",
E         -           "author": {
E         -             "id": "userid",
E         -             "username": "user"
E         -           },
E         -           "content": "Hello world"
E         -         },
E         -         "op": 0,
E         -         "s": 4,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "chanmsg",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "user",
E         -         "userid"
E         -       ],
E         -       "recipient": [
E         -         "guldid",
E         -         "chanid"
E         -       ],
E         -       "message": "Hello world"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "chanmsg",
E         -     "person": null,
E         -     "isme": true,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "anchor": "guldid:chanid",
E         -     "message": "Hello user",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "chanid",
E         -         "guild_id": "guldid",
E         -         "author": {
E         -           "id": "dscunq",
E         -           "username": "dscbot"
E         -         },
E         -         "content": "Hello user"
E         -       },
E         -       "seqno": 5,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "chanid",
E         -           "guild_id": "guldid",
E         -           "author": {
E         -             "id": "dscunq",
E         -             "username": "dscbot"
E         -           },
E         -           "content": "Hello user"
E         -         },
E         -         "op": 0,
E         -         "s": 5,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "chanmsg",
E         -       "isme": true,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "recipient": [
E         -         "guldid",
E         -         "chanid"
E         -       ],
E         -       "message": "Hello user"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": "GUILD_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channels": [
E         -           {
E         -             "id": "enrobie",
E         -             "topic": "Test topic already set",
E         -             "name": "enrobie"
E         -           }
E         -         ]
E         -       },
E         -       "seqno": 2,
E         -       "original": {
E         -         "d": {
E         -           "channels": [
E         -             {
E         -               "id": "enrobie",
E         -               "topic": "Test topic already set",
E         -               "name": "enrobie"
E         -             }
E         -           ]
E         -         },
E         -         "op": 0,
E         -         "s": 2,
E         -         "t": "GUILD_CREATE"
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": "CHANNEL_UPDATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "id": "enrobie",
E         -         "topic": "Test topic is changed",
E         -         "name": "enrobie"
E         -       },
E         -       "seqno": 3,
E         -       "original": {
E         -         "d": {
E         -           "id": "enrobie",
E         -           "topic": "Test topic is changed",
E         -           "name": "enrobie"
E         -         },
E         -         "op": 0,
E         -         "s": 3,
E         -         "t": "CHANNEL_UPDATE"
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "chanmsg",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "user",
E         -       "userid"
E         -     ],
E         -     "anchor": "guildid:enrobie",
E         -     "message": "Hello dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "enrobie",
E         -         "guild_id": "guildid",
E         -         "author": {
E         -           "id": "userid",
E         -           "username": "user"
E         -         },
E         -         "content": "Hello dscbot"
E         -       },
E         -       "seqno": 4,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "enrobie",
E         -           "guild_id": "guildid",
E         -           "author": {
E         -             "id": "userid",
E         -             "username": "user"
E         -           },
E         -           "content": "Hello dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 4,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "chanmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "user",
E         -         "userid"
E         -       ],
E         -       "recipient": [
E         -         "guildid",
E         -         "enrobie"
E         -       ],
E         -       "message": "Hello dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "privmsg",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "user",
E         -       "userid"
E         -     ],
E         -     "anchor": "userid",
E         -     "message": "Hello dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "privid",
E         -         "author": {
E         -           "id": "userid",
E         -           "username": "user"
E         -         },
E         -         "content": "Hello dscbot"
E         -       },
E         -       "seqno": 5,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "privid",
E         -           "author": {
E         -             "id": "userid",
E         -             "username": "user"
E         -           },
E         -           "content": "Hello dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 5,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "privmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "user",
E         -         "userid"
E         -       ],
E         -       "recipient": [
E         -         null,
E         -         "privid"
E         -       ],
E         -       "message": "Hello dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "chanmsg",
E         -     "person": "hubert",
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "hubert",
E         -       "823039201390230492"
E         -     ],
E         -     "anchor": "guildid:enrobie",
E         -     "message": "dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "enrobie",
E         -         "guild_id": "guildid",
E         -         "author": {
E         -           "id": "823039201390230492",
E         -           "username": "hubert"
E         -         },
E         -         "content": "dscbot"
E         -       },
E         -       "seqno": 7,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "enrobie",
E         -           "guild_id": "guildid",
E         -           "author": {
E         -             "id": "823039201390230492",
E         -             "username": "hubert"
E         -           },
E         -           "content": "dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 7,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "chanmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "hubert",
E         -         "823039201390230492"
E         -       ],
E         -       "recipient": [
E         -         "guildid",
E         -         "enrobie"
E         -       ],
E         -       "message": "dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "chanmsg",
E         -     "person": "hubert",
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "hubert",
E         -       "823039201390230492"
E         -     ],
E         -     "anchor": "guildid:enrobie",
E         -     "message": "dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "enrobie",
E         -         "guild_id": "guildid",
E         -         "author": {
E         -           "id": "823039201390230492",
E         -           "username": "hubert"
E         -         },
E         -         "content": "dscbot"
E         -       },
E         -       "seqno": 7,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "enrobie",
E         -           "guild_id": "guildid",
E         -           "author": {
E         -             "id": "823039201390230492",
E         -             "username": "hubert"
E         -           },
E         -           "content": "dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 7,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "chanmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "hubert",
E         -         "823039201390230492"
E         -       ],
E         -       "recipient": [
E         -         "guildid",
E         -         "enrobie"
E         -       ],
E         -       "message": "dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "privmsg",
E         -     "person": "hubert",
E         -     "isme": false,
E         -     "hasme": true,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": [
E         -       "hubert",
E         -       "823039201390230492"
E         -     ],
E         -     "anchor": "823039201390230492",
E         -     "message": "dscbot",
E         -     "event": {
E         -       "type": "MESSAGE_CREATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "channel_id": "privid",
E         -         "author": {
E         -           "id": "823039201390230492",
E         -           "username": "hubert"
E         -         },
E         -         "content": "dscbot"
E         -       },
E         -       "seqno": 8,
E         -       "original": {
E         -         "d": {
E         -           "channel_id": "privid",
E         -           "author": {
E         -             "id": "823039201390230492",
E         -             "username": "hubert"
E         -           },
E         -           "content": "dscbot"
E         -         },
E         -         "op": 0,
E         -         "s": 8,
E         -         "t": "MESSAGE_CREATE"
E         -       },
E         -       "kind": "privmsg",
E         -       "isme": false,
E         -       "hasme": true,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": [
E         -         "hubert",
E         -         "823039201390230492"
E         -       ],
E         -       "recipient": [
E         -         null,
E         -         "privid"
E         -       ],
E         -       "message": "dscbot"
E         -     }
E         -   },
E         -   {
E         -     "client": "dscbot",
E         -     "family": "discord",
E         -     "kind": "event",
E         -     "person": null,
E         -     "isme": false,
E         -     "hasme": false,
E         -     "whome": [
E         -       "dscbot",
E         -       "dscunq"
E         -     ],
E         -     "author": null,
E         -     "anchor": null,
E         -     "message": null,
E         -     "event": {
E         -       "type": "CHANNEL_UPDATE",
E         -       "opcode": 0,
E         -       "data": {
E         -         "id": "enrobie",
E         -         "topic": "Test topic",
E         -         "name": "enrobie"
E         -       },
E         -       "seqno": 9,
E         -       "original": {
E         -         "d": {
E         -           "id": "enrobie",
E         -           "topic": "Test topic",
E         -           "name": "enrobie"
E         -         },
E         -         "op": 0,
E         -         "s": 9,
E         -         "t": "CHANNEL_UPDATE"
E         -       },
E         -       "kind": "event",
E         -       "isme": false,
E         -       "hasme": false,
E         -       "whome": [
E         -         "dscbot",
E         -         "dscunq"
E         -       ],
E         -       "author": null,
E         -       "recipient": null,
E         -       "message": null
E         -     }
E         -   }
E         - ]

enrobie/clients/discord/test/test_message.py:273: AssertionError
----------------------------- Captured stdout call -----------------------------

‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.272146+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :hourglass: `pending` <t:1751942348:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.540530+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'READY'
    opcode: 0
    data: dict
      heartbeat_interval: 100
      resume_gateway_url: 'wss://resume.dsc.gg'
      session_id: 'mocked'
      user: dict
        username: 'dscbot'
        id: 'dscunq'
    seqno: 1
    original: dict
      d: dict
        heartbeat_interval: 100
        resume_gateway_url: 'wss://resume.dsc.gg'
        session_id: 'mocked'
        user: dict
          username: 'dscbot'
          id: 'dscunq'
      op: 0
      s: 1
      t: 'READY'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.565396+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :green_circle: `normal` <t:1751942348:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.565596+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Discord/dscbot: üü¢ normal for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.565786+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Discord/`dscbot`: :large_green_circle: `normal` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:08.642898+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 7
    data: None
    seqno: None
    original: dict
      d: None
      op: 7
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:09.747214+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 10
    data: dict
      heartbeat_interval: 100
      _trace: list
        - '["g....0}]'
    seqno: None
    original: dict
      d: dict
        heartbeat_interval: 100
        _trace: list
          - '["g....0}]'
      op: 10
      s: None
      t: None
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:09.849120+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'RESUMED'
    opcode: 0
    data: dict
      _trace: list
        - '["g...3}]}]'
    seqno: 1
    original: dict
      d: dict
        _trace: list
          - '["g...3}]}]'
      op: 0
      s: 1
      t: 'RESUMED'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.051618+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 3
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 3
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - None
      - 'privid'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is dscbot. Use some markdown and emojis.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: discord
Message kind: privmsg
Message time: 2025-07-08T02:39:10.051618+0000

**User Metadata**
User nickname: user
User serverID: userid

**Additional Metadata**
Your nickname: dscbot
Your serverID: dscunq

**Question**
Hello dscbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.153826+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'chanid'
      guild_id: 'guldid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello world'
    seqno: 4
    original: dict
      d: dict
        channel_id: 'chanid'
        guild_id: 'guldid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello world'
      op: 0
      s: 4
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - 'guldid'
      - 'chanid'
    message: 'Hello world'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.256300+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'chanid'
      guild_id: 'guldid'
      author: dict
        id: 'dscunq'
        username: 'dscbot'
      content: 'Hello user'
    seqno: 5
    original: dict
      d: dict
        channel_id: 'chanid'
        guild_id: 'guldid'
        author: dict
          id: 'dscunq'
          username: 'dscbot'
        content: 'Hello user'
      op: 0
      s: 5
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: True
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'dscbot'
      - 'dscunq'
    recipient: tuple
      - 'guldid'
      - 'chanid'
    message: 'Hello user'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.358432+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'GUILD_CREATE'
    opcode: 0
    data: dict
      channels: list
        - dict
          id: 'enrobie'
          topic: 'Test topic already set'
          name: 'enrobie'
    seqno: 2
    original: dict
      d: dict
        channels: list
          - dict
            id: 'enrobie'
            topic: 'Test topic already set'
            name: 'enrobie'
      op: 0
      s: 2
      t: 'GUILD_CREATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.460538+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'CHANNEL_UPDATE'
    opcode: 0
    data: dict
      id: 'enrobie'
      topic: 'Test topic is changed'
      name: 'enrobie'
    seqno: 3
    original: dict
      d: dict
        id: 'enrobie'
        topic: 'Test topic is changed'
        name: 'enrobie'
      op: 0
      s: 3
      t: 'CHANNEL_UPDATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.562405+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 4
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 4
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.665649+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: 'userid'
        username: 'user'
      content: 'Hello dscbot'
    seqno: 5
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: 'userid'
          username: 'user'
        content: 'Hello dscbot'
      op: 0
      s: 5
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'user'
      - 'userid'
    recipient: tuple
      - None
      - 'privid'
    message: 'Hello dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.768744+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 7
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 7
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.869328+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'enrobie'
      guild_id: 'guildid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 7
    original: dict
      d: dict
        channel_id: 'enrobie'
        guild_id: 'guildid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 7
      t: 'MESSAGE_CREATE'
    kind: 'chanmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - 'guildid'
      - 'enrobie'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:10.971259+0000
  client: 'dscbot'
  person: 'hubert'
  event: ClientEvent
    type: 'MESSAGE_CREATE'
    opcode: 0
    data: dict
      channel_id: 'privid'
      author: dict
        id: '823039201390230492'
        username: 'hubert'
      content: 'dscbot'
    seqno: 8
    original: dict
      d: dict
        channel_id: 'privid'
        author: dict
          id: '823039201390230492'
          username: 'hubert'
        content: 'dscbot'
      op: 0
      s: 8
      t: 'MESSAGE_CREATE'
    kind: 'privmsg'
    isme: False
    hasme: True
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: tuple
      - 'hubert'
      - '823039201390230492'
    recipient: tuple
      - None
      - 'privid'
    message: 'dscbot'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.073115+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: 'CHANNEL_UPDATE'
    opcode: 0
    data: dict
      id: 'enrobie'
      topic: 'Test topic'
      name: 'enrobie'
    seqno: 9
    original: dict
      d: dict
        id: 'enrobie'
        topic: 'Test topic'
        name: 'enrobie'
      op: 0
      s: 9
      t: 'CHANNEL_UPDATE'
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.177945+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/mocked/messages'
  params: None
  json: dict
    content: ':speech_balloon: Discord/`dscbot`: :red_circle: `failure` <t:1751942351:R>'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.178193+0000
  client: 'ircbot'
  event: 'PRIVMSG mocked :üí¨ Discord/dscbot: üî¥ failure for 0s'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.178410+0000
  client: 'mtmbot'
  method: 'post'
  path: 'posts'
  params: None
  json: dict
    channel_id: 'mocked'
    message: ':speech_balloon: Discord/`dscbot`: :red_circle: `failure` for `0s`'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.173514+0000
  client: 'dscbot'
  person: None
  event: ClientEvent
    type: None
    opcode: 9
    data: None
    seqno: None
    original: dict
      op: 9
    kind: 'event'
    isme: False
    hasme: False
    whome: tuple
      - 'dscbot'
      - 'dscunq'
    author: None
    recipient: None
    message: None

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is dscbot. Use some markdown and emojis.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: discord
Message kind: chanmsg
Message time: 2025-07-08T02:39:10.562405+0000

**User Metadata**
User nickname: user
User serverID: userid

**Additional Metadata**
Your nickname: dscbot
Your serverID: dscunq

**Channel Recents**
These are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.
[2025-07-08T02:38:52+0000] <userid> Hello dscbot
[2025-07-08T02:38:53+0000] <823039201390230492> dscbot
[2025-07-08T02:38:53+0000] <823039201390230492> dscbot
[2025-07-08T02:39:10+0000] <userid> Hello dscbot
[2025-07-08T02:39:10+0000] <823039201390230492> dscbot
[2025-07-08T02:39:10+0000] <823039201390230492> dscbot

**Question**
Hello dscbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:11.456187+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/privid/messages'
  params: None
  json: dict
    content: 'I'm sorry user, I'm afraid I can't do that.'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  system: 'You are Bender from Futurama.'
  prompt: '**Instructions**
Your nickname is dscbot. Use some markdown and emojis.

**Responding**
There are reasons not to respond to the user question. If you think you should not respond, reply only no_response.
Reasons to reply with only no_response include:
 - If you believe that you are being abused by the user asking the quesiton.

**Message Metadata**
Client family: discord
Message kind: privmsg
Message time: 2025-07-08T02:39:10.665649+0000

**User Metadata**
User nickname: user
User serverID: userid

**Additional Metadata**
Your nickname: dscbot
Your serverID: dscunq

**Question**
Hello dscbot'
  sleep: 0

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ


‚îç‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

  time: 2025-07-08T02:39:12.792799+0000
  client: 'dscbot'
  method: 'post'
  path: 'channels/enrobie/messages'
  params: None
  json: dict
    content: 'I'm sorry user, I'm afraid I can't do that.'

‚îï‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1025 HTTP Request: GET https://discord.com/api/v10/gateway "HTTP/1.1 200 OK"
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-3a987dc9-6772-4206-934d-a327948cb5ec', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: privmsg\nMessage time: 2025-07-08T02:39:10.051618+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.436244 seconds
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-3a987dc9-6772-4206-934d-a327948cb5ec', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: privmsg\nMessage time: 2025-07-08T02:39:10.051618+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1603 1 retry left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.839256 seconds
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-3a987dc9-6772-4206-934d-a327948cb5ec', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: privmsg\nMessage time: 2025-07-08T02:39:10.051618+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1550 Raising connection error
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-57ac4cc2-798b-4fb7-af76-68e5a1980445', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: chanmsg\nMessage time: 2025-07-08T02:39:10.562405+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Channel Recents**\nThese are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.\n[2025-07-08T02:38:52+0000] <userid> Hello dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <userid> Hello dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.386259 seconds
INFO     httpx:_client.py:1025 HTTP Request: POST https://discord.com/api/v10/channels/privid/messages "HTTP/1.1 200 OK"
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-57ac4cc2-798b-4fb7-af76-68e5a1980445', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: chanmsg\nMessage time: 2025-07-08T02:39:10.562405+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Channel Recents**\nThese are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.\n[2025-07-08T02:38:52+0000] <userid> Hello dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <userid> Hello dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1603 1 retry left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.929015 seconds
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-57ac4cc2-798b-4fb7-af76-68e5a1980445', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: chanmsg\nMessage time: 2025-07-08T02:39:10.562405+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Channel Recents**\nThese are the most recent messages from the current channel or direct message. When client family is IRC or Mattermost, you do not see your messages below.\n[2025-07-08T02:38:52+0000] <userid> Hello dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:38:53+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <userid> Hello dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n[2025-07-08T02:39:10+0000] <823039201390230492> dscbot\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1550 Raising connection error
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'headers': {'User-Agent': 'pydantic-ai/0.3.7'}, 'timeout': 30, 'files': None, 'idempotency_key': 'stainless-python-retry-59af1a91-e7cf-4faa-9e35-15223448c554', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Bender from Futurama.'}, {'role': 'user', 'content': '**Instructions**\nYour nickname is dscbot. Use some markdown and emojis.\n\n**Responding**\nThere are reasons not to respond to the user question. If you think you should not respond, reply only no_response.\nReasons to reply with only no_response include:\n - If you believe that you are being abused by the user asking the quesiton.\n\n**Message Metadata**\nClient family: discord\nMessage kind: privmsg\nMessage time: 2025-07-08T02:39:10.665649+0000\n\n**User Metadata**\nUser nickname: user\nUser serverID: userid\n\n**Additional Metadata**\nYour nickname: dscbot\nYour serverID: dscunq\n\n**Question**\nHello dscbot'}], 'model': 'gpt-4o', 'stream': False, 'tool_choice': 'required', 'tools': [{'type': 'function', 'function': {'name': 'ainswer_memory_insert', 'description': 'Insert the memory into the historical person memorables.\n\nDo not add memories of previous questions or discussion.\nDo not add new memories without confirmation as there is\nlimited storage that the person may have for memorables.\nOnly add the memory one time after ensuring it does not\nalready exist, using the `ainswer_memory_records` tool.\nAlways confirm with the person before inserting message.\nBe very cautious and conservative with use of this tool,\nthe bot is configured by default to remove older entries\nonce the limit for the person memories has been reached!\n\n.. note::\n   This tool will allow for inserting new memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'message': {'description': 'Historical person memorable', 'maxLength': 400, 'minLength': 1, 'type': 'string'}}, 'required': ['message'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_records', 'description': 'Return the historical records for the person memorables.\n\n.. note::\n   This tool will return historical memorable items for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ainswer_memory_delete', 'description': 'Delete the record from the historical person memorables.\n\n.. note::\n   This tool will allow for deleting the memories for\n   the provided username, also known as a Robie person.', 'parameters': {'additionalProperties': False, 'properties': {'unique': {'description': 'Unique identifier for memory', 'maxLength': 36, 'minLength': 36, 'type': 'string'}}, 'required': ['unique'], 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'homie_persist', 'description': '<summary>Return the current values in Homie Automate persistence.\n\n.. note::\n   This tool will return values from the Homie Automate\n   persistence store. They may include information about\n   many things regarding the Robie owner home status.</summary>\n<returns>\n<description>Current values in Homie Automate persistence.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'nagios_current', 'description': '<summary>Return the current status for infratstructure in Nagios.\n\n.. note::\n   This tool will return status values from Nagios Core.\n   Nagios is a network and system monitoring platform.</summary>\n<returns>\n<description>Current status for infratstructure in Nagios.</description>\n</returns>', 'parameters': {'additionalProperties': False, 'properties': {}, 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'final_result', 'description': 'Contains the response for question for the client type.', 'parameters': {'additionalProperties': False, 'properties': {'text': {'description': 'Format intended for Discord.', 'maxLength': 1900, 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}]}}
DEBUG    openai._base_client:_base_client.py:1515 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    openai._base_client:_base_client.py:1539 Encountered Exception
Traceback (most recent call last):
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/openai/_base_client.py", line 1519, in request
    response = await self._client.send(
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1629, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/httpx/_transports/default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 190, in amock
    response = await cls._send_async_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 224, in _send_async_request
    httpx_response = await cls.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 136, in async_handler
    raise assertion_error
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/mocks.py", line 129, in async_handler
    httpx_response = await router.async_handler(httpx_request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 318, in async_handler
    resolved = await self.aresolve(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 291, in aresolve
    with self.resolver(request) as resolved:
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/contextlib.py", line 144, in __exit__
    next(self.gen)
  File "/home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/respx/router.py", line 250, in resolver
    raise AllMockedAssertionError(f"RESPX: {request!r} not mocked!")
respx.models.AllMockedAssertionError: RESPX: <Request('POST', 'https://api.openai.com/v1/chat/completions')> not mocked!
DEBUG    openai._base_client:_base_client.py:1605 2 retries left
INFO     openai._base_client:_base_client.py:1608 Retrying request to /chat/completions in 0.450317 seconds
=============================== warnings summary ===============================
enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_engage
  /home/runner/work/enrobie/enrobie/main/.venv-package/lib/python3.12/site-packages/pydantic_graph/_utils.py:50: DeprecationWarning: There is no current event loop
    event_loop = asyncio.get_event_loop()

enrobie/plugins/ainswer/test/test_question.py::test_AinswerQuestion_engage
  /home/runner/work/enrobie/enrobie/main/enrobie/plugins/ainswer/question.py:503: DeprecationWarning: `result.data` is deprecated, use `result.output` instead.
    return runsync.data

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.12.11-final-0 _______________

Name                                              Stmts   Miss  Cover
---------------------------------------------------------------------
enrobie/__init__.py                                   6      0   100%
enrobie/clients/__init__.py                           7      0   100%
enrobie/clients/discord/__init__.py                   3      0   100%
enrobie/clients/discord/client.py                   169      0   100%
enrobie/clients/discord/command.py                   22      0   100%
enrobie/clients/discord/message.py                   51      1    98%
enrobie/clients/discord/params.py                    13      0   100%
enrobie/clients/discord/test/__init__.py              8      0   100%
enrobie/clients/discord/test/test_client.py          90      0   100%
enrobie/clients/discord/test/test_command.py         24      0   100%
enrobie/clients/discord/test/test_message.py        100      7    93%
enrobie/clients/irc/__init__.py                       3      0   100%
enrobie/clients/irc/client.py                       189      0   100%
enrobie/clients/irc/command.py                       13      0   100%
enrobie/clients/irc/message.py                       60      0   100%
enrobie/clients/irc/params.py                        12      0   100%
enrobie/clients/irc/states.py                         7      0   100%
enrobie/clients/irc/test/__init__.py                  8      0   100%
enrobie/clients/irc/test/test_client.py              84      6    93%
enrobie/clients/irc/test/test_command.py             21      0   100%
enrobie/clients/irc/test/test_message.py             99      0   100%
enrobie/clients/mattermost/__init__.py                3      0   100%
enrobie/clients/mattermost/client.py                173      0   100%
enrobie/clients/mattermost/command.py                22      0   100%
enrobie/clients/mattermost/message.py                51      0   100%
enrobie/clients/mattermost/params.py                 12      0   100%
enrobie/clients/mattermost/test/__init__.py           8      0   100%
enrobie/clients/mattermost/test/test_client.py      100      0   100%
enrobie/clients/mattermost/test/test_command.py      24      0   100%
enrobie/clients/mattermost/test/test_message.py     103      0   100%
enrobie/conftest.py                                  35      0   100%
enrobie/execution/__init__.py                         0      0   100%
enrobie/execution/config.py                          15      0   100%
enrobie/execution/crypts.py                          18      0   100%
enrobie/execution/service.py                         21      0   100%
enrobie/execution/test/__init__.py                    0      0   100%
enrobie/execution/test/test_config.py                 4      0   100%
enrobie/execution/test/test_crypts.py                 4      0   100%
enrobie/execution/test/test_service.py                4      0   100%
enrobie/plugins/__init__.py                          18      0   100%
enrobie/plugins/ainswer/__init__.py                   5      0   100%
enrobie/plugins/ainswer/ainswer.py                   50     16    68%
enrobie/plugins/ainswer/common.py                    22      0   100%
enrobie/plugins/ainswer/helpers.py                   91      0   100%
enrobie/plugins/ainswer/history.py                  158     16    90%
enrobie/plugins/ainswer/memory.py                   132      0   100%
enrobie/plugins/ainswer/models.py                    34      0   100%
enrobie/plugins/ainswer/params.py                    40      0   100%
enrobie/plugins/ainswer/plugin.py                   166     12    93%
enrobie/plugins/ainswer/question.py                 164      3    98%
enrobie/plugins/ainswer/test/__init__.py              2      0   100%
enrobie/plugins/ainswer/test/test_history.py         48      0   100%
enrobie/plugins/ainswer/test/test_memory.py          36      0   100%
enrobie/plugins/ainswer/test/test_models.py          18      0   100%
enrobie/plugins/ainswer/test/test_plugin.py          63      5    92%
enrobie/plugins/ainswer/test/test_question.py        60      0   100%
enrobie/plugins/ainswer/toolset.py                   34      3    91%
enrobie/plugins/autojoin/__init__.py                  3      0   100%
enrobie/plugins/autojoin/params.py                   15      0   100%
enrobie/plugins/autojoin/plugin.py                  129      0   100%
enrobie/plugins/autojoin/test/__init__.py             0      0   100%
enrobie/plugins/autojoin/test/test_plugin.py         43      0   100%
enrobie/plugins/autonick/__init__.py                  3      0   100%
enrobie/plugins/autonick/params.py                   17      0   100%
enrobie/plugins/autonick/plugin.py                  132      0   100%
enrobie/plugins/autonick/test/__init__.py             0      0   100%
enrobie/plugins/autonick/test/test_plugin.py         43      0   100%
enrobie/plugins/enhomie/__init__.py                   3      0   100%
enrobie/plugins/enhomie/ainswer.py                   26     20    23%
enrobie/plugins/enhomie/helpers.py                   43      6    86%
enrobie/plugins/enhomie/params.py                    22      0   100%
enrobie/plugins/enhomie/persist.py                   68     15    78%
enrobie/plugins/enhomie/plugin.py                    85      0   100%
enrobie/plugins/enhomie/test/__init__.py              0      0   100%
enrobie/plugins/enhomie/test/test_plugin.py          92      0   100%
enrobie/plugins/logger/__init__.py                    3      0   100%
enrobie/plugins/logger/history.py                   159      0   100%
enrobie/plugins/logger/params.py                     13      0   100%
enrobie/plugins/logger/plugin.py                     84      0   100%
enrobie/plugins/logger/test/__init__.py               0      0   100%
enrobie/plugins/logger/test/test_history.py          51      0   100%
enrobie/plugins/logger/test/test_plugin.py           53      0   100%
enrobie/plugins/nagios/__init__.py                    3      0   100%
enrobie/plugins/nagios/ainswer.py                    26     20    23%
enrobie/plugins/nagios/current.py                    85     35    59%
enrobie/plugins/nagios/helpers.py                    31      6    81%
enrobie/plugins/nagios/params.py                     22      0   100%
enrobie/plugins/nagios/plugin.py                     84      0   100%
enrobie/plugins/nagios/test/__init__.py               0      0   100%
enrobie/plugins/nagios/test/test_plugin.py           93      0   100%
enrobie/plugins/status/__init__.py                    6      0   100%
enrobie/plugins/status/common.py                     18      0   100%
enrobie/plugins/status/helpers.py                   126      0   100%
enrobie/plugins/status/params.py                     30      0   100%
enrobie/plugins/status/plugin.py                    122      0   100%
enrobie/plugins/status/test/__init__.py               0      0   100%
enrobie/plugins/status/test/test_plugin.py           76      0   100%
enrobie/robie/__init__.py                             4      0   100%
enrobie/robie/addons/__init__.py                      5      0   100%
enrobie/robie/addons/jinja2.py                        9      0   100%
enrobie/robie/addons/logger.py                       72      0   100%
enrobie/robie/addons/queue.py                        34      0   100%
enrobie/robie/addons/test/__init__.py                 0      0   100%
enrobie/robie/addons/test/test_logger.py             43      0   100%
enrobie/robie/addons/test/test_queue.py              27      0   100%
enrobie/robie/childs/__init__.py                      6      0   100%
enrobie/robie/childs/child.py                        38      0   100%
enrobie/robie/childs/client.py                       49      0   100%
enrobie/robie/childs/person.py                       42      0   100%
enrobie/robie/childs/plugin.py                       50      0   100%
enrobie/robie/childs/robie.py                        92      0   100%
enrobie/robie/childs/test/__init__.py                 0      0   100%
enrobie/robie/childs/test/test_child.py               8      0   100%
enrobie/robie/childs/test/test_client.py              2      0   100%
enrobie/robie/childs/test/test_person.py             32      0   100%
enrobie/robie/childs/test/test_plugin.py             23      0   100%
enrobie/robie/childs/test/test_robie.py              15      0   100%
enrobie/robie/common.py                               7      0   100%
enrobie/robie/config.py                             171      0   100%
enrobie/robie/members/__init__.py                     4      0   100%
enrobie/robie/members/clients.py                     47      0   100%
enrobie/robie/members/member.py                     115      0   100%
enrobie/robie/members/plugins.py                     38      0   100%
enrobie/robie/members/test/__init__.py                0      0   100%
enrobie/robie/members/test/test_clients.py           25      0   100%
enrobie/robie/members/test/test_member.py             2      0   100%
enrobie/robie/members/test/test_plugins.py           25      0   100%
enrobie/robie/models/__init__.py                      5      0   100%
enrobie/robie/models/command.py                      11      0   100%
enrobie/robie/models/message.py                      31      0   100%
enrobie/robie/models/robie.py                        43      0   100%
enrobie/robie/models/test/__init__.py                 0      0   100%
enrobie/robie/models/test/test_command.py            19      0   100%
enrobie/robie/models/test/test_message.py            19      0   100%
enrobie/robie/models/test/test_models.py             13      0   100%
enrobie/robie/params/__init__.py                      9      0   100%
enrobie/robie/params/child.py                         8      0   100%
enrobie/robie/params/client.py                        8      0   100%
enrobie/robie/params/common.py                        2      0   100%
enrobie/robie/params/person.py                       16      0   100%
enrobie/robie/params/plugin.py                        9      0   100%
enrobie/robie/params/robie.py                        21      0   100%
enrobie/robie/params/service.py                       7      0   100%
enrobie/robie/robie.py                              105      0   100%
enrobie/robie/service.py                            171      0   100%
enrobie/robie/test/__init__.py                        2      0   100%
enrobie/robie/test/test_config.py                    20      0   100%
enrobie/robie/test/test_robie.py                     56      0   100%
enrobie/robie/test/test_service.py                   64      0   100%
enrobie/robie/threads/__init__.py                     5      0   100%
enrobie/robie/threads/client.py                      18      0   100%
enrobie/robie/threads/plugin.py                      18      0   100%
enrobie/robie/threads/test/__init__.py                0      0   100%
enrobie/robie/threads/test/test_client.py            28      0   100%
enrobie/robie/threads/test/test_plugin.py            28      0   100%
enrobie/robie/threads/test/test_thread.py            25      0   100%
enrobie/robie/threads/thread.py                      97      0   100%
enrobie/utils/__init__.py                             8      0   100%
enrobie/utils/child.py                               18      0   100%
enrobie/utils/importer.py                             6      0   100%
enrobie/utils/param.py                               29      0   100%
enrobie/utils/states.py                              93      0   100%
enrobie/utils/test/__init__.py                        0      0   100%
enrobie/utils/test/test_child.py                     20      0   100%
enrobie/utils/test/test_importer.py                   4      0   100%
enrobie/utils/test/test_param.py                     16      0   100%
enrobie/utils/test/test_states.py                    53      0   100%
enrobie/utils/test/test_thread.py                    18      0   100%
enrobie/utils/thread.py                              14      0   100%
---------------------------------------------------------------------
TOTAL                                              6658    171    97%
=========================== short test summary info ============================
FAILED enrobie/plugins/ainswer/test/test_plugin.py::test_AinswerPlugin_cover - assert 0 >= 1
 +  where 0 = len([])
FAILED enrobie/clients/irc/test/test_client.py::test_IRCClient_channels - assert None is not None
FAILED enrobie/clients/discord/test/test_message.py::test_DSCMessage_samples - assert '[]' == '[\n  {\n    ...    }\n  }\n]'
  
  + []
  - [
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": "READY",
  -       "opcode": 0,
  -       "data": {
  -         "heartbeat_interval": 100,
  -         "resume_gateway_url": "wss://resume.dsc.gg",
  -         "session_id": "mocked",
  -         "user": {
  -           "username": "dscbot",
  -           "id": "dscunq"
  -         }
  -       },
  -       "seqno": 1,
  -       "original": {
  -         "d": {
  -           "heartbeat_interval": 100,
  -           "resume_gateway_url": "wss://resume.dsc.gg",
  -           "session_id": "mocked",
  -           "user": {
  -             "username": "dscbot",
  -             "id": "dscunq"
  -           }
  -         },
  -         "op": 0,
  -         "s": 1,
  -         "t": "READY"
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": null,
  -       "opcode": 7,
  -       "data": null,
  -       "seqno": null,
  -       "original": {
  -         "d": null,
  -         "op": 7
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": null,
  -       "opcode": 10,
  -       "data": {
  -         "heartbeat_interval": 100,
  -         "_trace": [
  -           "[\"g....0}]"
  -         ]
  -       },
  -       "seqno": null,
  -       "original": {
  -         "d": {
  -           "heartbeat_interval": 100,
  -           "_trace": [
  -             "[\"g....0}]"
  -           ]
  -         },
  -         "op": 10,
  -         "s": null,
  -         "t": null
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": "RESUMED",
  -       "opcode": 0,
  -       "data": {
  -         "_trace": [
  -           "[\"g...3}]}]"
  -         ]
  -       },
  -       "seqno": 1,
  -       "original": {
  -         "d": {
  -           "_trace": [
  -             "[\"g...3}]}]"
  -           ]
  -         },
  -         "op": 0,
  -         "s": 1,
  -         "t": "RESUMED"
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "privmsg",
  -     "person": null,
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "user",
  -       "userid"
  -     ],
  -     "anchor": "userid",
  -     "message": "Hello dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "privid",
  -         "author": {
  -           "id": "userid",
  -           "username": "user"
  -         },
  -         "content": "Hello dscbot"
  -       },
  -       "seqno": 3,
  -       "original": {
  -         "d": {
  -           "channel_id": "privid",
  -           "author": {
  -             "id": "userid",
  -             "username": "user"
  -           },
  -           "content": "Hello dscbot"
  -         },
  -         "op": 0,
  -         "s": 3,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "privmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "user",
  -         "userid"
  -       ],
  -       "recipient": [
  -         null,
  -         "privid"
  -       ],
  -       "message": "Hello dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "chanmsg",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "user",
  -       "userid"
  -     ],
  -     "anchor": "guldid:chanid",
  -     "message": "Hello world",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "chanid",
  -         "guild_id": "guldid",
  -         "author": {
  -           "id": "userid",
  -           "username": "user"
  -         },
  -         "content": "Hello world"
  -       },
  -       "seqno": 4,
  -       "original": {
  -         "d": {
  -           "channel_id": "chanid",
  -           "guild_id": "guldid",
  -           "author": {
  -             "id": "userid",
  -             "username": "user"
  -           },
  -           "content": "Hello world"
  -         },
  -         "op": 0,
  -         "s": 4,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "chanmsg",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "user",
  -         "userid"
  -       ],
  -       "recipient": [
  -         "guldid",
  -         "chanid"
  -       ],
  -       "message": "Hello world"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "chanmsg",
  -     "person": null,
  -     "isme": true,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "anchor": "guldid:chanid",
  -     "message": "Hello user",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "chanid",
  -         "guild_id": "guldid",
  -         "author": {
  -           "id": "dscunq",
  -           "username": "dscbot"
  -         },
  -         "content": "Hello user"
  -       },
  -       "seqno": 5,
  -       "original": {
  -         "d": {
  -           "channel_id": "chanid",
  -           "guild_id": "guldid",
  -           "author": {
  -             "id": "dscunq",
  -             "username": "dscbot"
  -           },
  -           "content": "Hello user"
  -         },
  -         "op": 0,
  -         "s": 5,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "chanmsg",
  -       "isme": true,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "recipient": [
  -         "guldid",
  -         "chanid"
  -       ],
  -       "message": "Hello user"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": "GUILD_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channels": [
  -           {
  -             "id": "enrobie",
  -             "topic": "Test topic already set",
  -             "name": "enrobie"
  -           }
  -         ]
  -       },
  -       "seqno": 2,
  -       "original": {
  -         "d": {
  -           "channels": [
  -             {
  -               "id": "enrobie",
  -               "topic": "Test topic already set",
  -               "name": "enrobie"
  -             }
  -           ]
  -         },
  -         "op": 0,
  -         "s": 2,
  -         "t": "GUILD_CREATE"
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": "CHANNEL_UPDATE",
  -       "opcode": 0,
  -       "data": {
  -         "id": "enrobie",
  -         "topic": "Test topic is changed",
  -         "name": "enrobie"
  -       },
  -       "seqno": 3,
  -       "original": {
  -         "d": {
  -           "id": "enrobie",
  -           "topic": "Test topic is changed",
  -           "name": "enrobie"
  -         },
  -         "op": 0,
  -         "s": 3,
  -         "t": "CHANNEL_UPDATE"
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "chanmsg",
  -     "person": null,
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "user",
  -       "userid"
  -     ],
  -     "anchor": "guildid:enrobie",
  -     "message": "Hello dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "enrobie",
  -         "guild_id": "guildid",
  -         "author": {
  -           "id": "userid",
  -           "username": "user"
  -         },
  -         "content": "Hello dscbot"
  -       },
  -       "seqno": 4,
  -       "original": {
  -         "d": {
  -           "channel_id": "enrobie",
  -           "guild_id": "guildid",
  -           "author": {
  -             "id": "userid",
  -             "username": "user"
  -           },
  -           "content": "Hello dscbot"
  -         },
  -         "op": 0,
  -         "s": 4,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "chanmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "user",
  -         "userid"
  -       ],
  -       "recipient": [
  -         "guildid",
  -         "enrobie"
  -       ],
  -       "message": "Hello dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "privmsg",
  -     "person": null,
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "user",
  -       "userid"
  -     ],
  -     "anchor": "userid",
  -     "message": "Hello dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "privid",
  -         "author": {
  -           "id": "userid",
  -           "username": "user"
  -         },
  -         "content": "Hello dscbot"
  -       },
  -       "seqno": 5,
  -       "original": {
  -         "d": {
  -           "channel_id": "privid",
  -           "author": {
  -             "id": "userid",
  -             "username": "user"
  -           },
  -           "content": "Hello dscbot"
  -         },
  -         "op": 0,
  -         "s": 5,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "privmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "user",
  -         "userid"
  -       ],
  -       "recipient": [
  -         null,
  -         "privid"
  -       ],
  -       "message": "Hello dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "chanmsg",
  -     "person": "hubert",
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "hubert",
  -       "823039201390230492"
  -     ],
  -     "anchor": "guildid:enrobie",
  -     "message": "dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "enrobie",
  -         "guild_id": "guildid",
  -         "author": {
  -           "id": "823039201390230492",
  -           "username": "hubert"
  -         },
  -         "content": "dscbot"
  -       },
  -       "seqno": 7,
  -       "original": {
  -         "d": {
  -           "channel_id": "enrobie",
  -           "guild_id": "guildid",
  -           "author": {
  -             "id": "823039201390230492",
  -             "username": "hubert"
  -           },
  -           "content": "dscbot"
  -         },
  -         "op": 0,
  -         "s": 7,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "chanmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "hubert",
  -         "823039201390230492"
  -       ],
  -       "recipient": [
  -         "guildid",
  -         "enrobie"
  -       ],
  -       "message": "dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "chanmsg",
  -     "person": "hubert",
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "hubert",
  -       "823039201390230492"
  -     ],
  -     "anchor": "guildid:enrobie",
  -     "message": "dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "enrobie",
  -         "guild_id": "guildid",
  -         "author": {
  -           "id": "823039201390230492",
  -           "username": "hubert"
  -         },
  -         "content": "dscbot"
  -       },
  -       "seqno": 7,
  -       "original": {
  -         "d": {
  -           "channel_id": "enrobie",
  -           "guild_id": "guildid",
  -           "author": {
  -             "id": "823039201390230492",
  -             "username": "hubert"
  -           },
  -           "content": "dscbot"
  -         },
  -         "op": 0,
  -         "s": 7,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "chanmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "hubert",
  -         "823039201390230492"
  -       ],
  -       "recipient": [
  -         "guildid",
  -         "enrobie"
  -       ],
  -       "message": "dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "privmsg",
  -     "person": "hubert",
  -     "isme": false,
  -     "hasme": true,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": [
  -       "hubert",
  -       "823039201390230492"
  -     ],
  -     "anchor": "823039201390230492",
  -     "message": "dscbot",
  -     "event": {
  -       "type": "MESSAGE_CREATE",
  -       "opcode": 0,
  -       "data": {
  -         "channel_id": "privid",
  -         "author": {
  -           "id": "823039201390230492",
  -           "username": "hubert"
  -         },
  -         "content": "dscbot"
  -       },
  -       "seqno": 8,
  -       "original": {
  -         "d": {
  -           "channel_id": "privid",
  -           "author": {
  -             "id": "823039201390230492",
  -             "username": "hubert"
  -           },
  -           "content": "dscbot"
  -         },
  -         "op": 0,
  -         "s": 8,
  -         "t": "MESSAGE_CREATE"
  -       },
  -       "kind": "privmsg",
  -       "isme": false,
  -       "hasme": true,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": [
  -         "hubert",
  -         "823039201390230492"
  -       ],
  -       "recipient": [
  -         null,
  -         "privid"
  -       ],
  -       "message": "dscbot"
  -     }
  -   },
  -   {
  -     "client": "dscbot",
  -     "family": "discord",
  -     "kind": "event",
  -     "person": null,
  -     "isme": false,
  -     "hasme": false,
  -     "whome": [
  -       "dscbot",
  -       "dscunq"
  -     ],
  -     "author": null,
  -     "anchor": null,
  -     "message": null,
  -     "event": {
  -       "type": "CHANNEL_UPDATE",
  -       "opcode": 0,
  -       "data": {
  -         "id": "enrobie",
  -         "topic": "Test topic",
  -         "name": "enrobie"
  -       },
  -       "seqno": 9,
  -       "original": {
  -         "d": {
  -           "id": "enrobie",
  -           "topic": "Test topic",
  -           "name": "enrobie"
  -         },
  -         "op": 0,
  -         "s": 9,
  -         "t": "CHANNEL_UPDATE"
  -       },
  -       "kind": "event",
  -       "isme": false,
  -       "hasme": false,
  -       "whome": [
  -         "dscbot",
  -         "dscunq"
  -       ],
  -       "author": null,
  -       "recipient": null,
  -       "message": null
  -     }
  -   }
  - ]
============= 3 failed, 93 passed, 2 warnings in 96.77s (0:01:36) ==============
